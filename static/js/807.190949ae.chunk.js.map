{"version":3,"file":"static/js/807.190949ae.chunk.js","mappings":"uQAOe,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACpC,OAAQD,GACJ,IAAK,QACD,OAAOL,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GAI9B,EAaD,OACI,iBAAKC,UAAWC,EAAAA,EAAAA,KAAhB,WACI,wCACA,kBAAMC,SAdO,SAAAC,GACjBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACjBjB,EACIkB,EAAAA,EAAAA,MAAqB,CACjBf,MAAOa,EAAKG,SAAShB,MAAMO,MAC3BL,SAAUW,EAAKG,SAASd,SAASK,SAEzCN,EAAS,IACTE,EAAY,GACf,EAIqCK,UAAWC,EAAAA,EAAAA,KAAaQ,aAAa,MAAnE,WACI,kBAAOT,UAAWC,EAAAA,EAAAA,MAAlB,UAEA,SAACS,EAAA,EAAD,CACIC,GAAG,eACHC,MAAM,QAENC,QAAQ,WAEJC,KAAK,QACLhB,KAAK,QACLC,MAAOP,EACXuB,SAAUnB,OAGd,kBAAOI,UAAWC,EAAAA,EAAAA,MAAlB,UACA,SAACS,EAAA,EAAD,CACIC,GAAG,eACHC,MAAM,WAENC,QAAQ,WAEJC,KAAK,WACLhB,KAAK,WACLC,MAAOL,EACPqB,SAAUnB,OAGlB,SAACoB,EAAA,EAAD,CAAQF,KAAK,SAASD,QAAQ,YAA9B,yBAIf,CCnEc,SAASI,IACtB,OACE,0BAEE,SAAC7B,EAAD,KAGL,C","sources":["views/LoginView.js","pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"redux/auth/auth-operations\";\nimport styles from \"../components/Form.module.css\";\nimport Button from '@mui/material/Button';\nimport { TextField } from \"@mui/material\";\n\nexport default function LoginView() {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                break;\n        }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const form = evt.currentTarget;\n        dispatch(\n            authOperations.logIn({\n                email: form.elements.email.value,\n                password: form.elements.password.value\n            }));\n        setEmail('');\n        setPassword('');\n    };\n    return (\n        <div className={styles.page}>\n            <h1>Login page</h1>\n            <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n                <label className={styles.label}> \n                                  \n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Email\"\n                    //color=\"secondary\"\n                    variant=\"standard\"\n                    //focused \n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                    onChange={handleChange}\n                />\n                </label> \n                <label className={styles.label}> \n                <TextField\n                    id=\"filled-basic\"\n                    label=\"Password\"\n                    //color=\"secondary\"\n                    variant=\"standard\"\n                    //focused \n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <Button type=\"submit\" variant=\"contained\">Log in</Button>\n            </form>\n        </div>\n    )\n}\n","import LoginView from \"../views/LoginView\";\n\nexport default function Login() {\n  return (\n    <div>\n      {/* <h2>Log In</h2> */}\n      <LoginView />\n    </div>\n  );\n}"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","styles","onSubmit","evt","preventDefault","form","currentTarget","authOperations","elements","autoComplete","TextField","id","label","variant","type","onChange","Button","Login"],"sourceRoot":""}