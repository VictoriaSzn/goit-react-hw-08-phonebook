{"version":3,"file":"static/js/498.689276e1.chunk.js","mappings":"oOAIMA,EAAS,CACXC,KAAM,CACFC,MAAO,KAEXC,MAAO,CACHC,QAAS,OACTC,cAAe,SACfC,aAAc,KAGP,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACxC,OAAQR,GACJ,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,OAEX,EAeG,OACK,4BACD,2CACA,kBAAMC,SAhBO,SAAAC,GACjBA,EAAIC,iBACJ,IAAMrB,EAAOoB,EAAIE,cACjBf,EACGgB,EAAAA,EAAAA,SAAwB,CACnBb,KAAMV,EAAKwB,SAASd,KAAKQ,MACzBN,MAAOZ,EAAKwB,SAASZ,MAAMM,MAC3BJ,SAAUd,EAAKwB,SAASV,SAASI,SAEzCP,EAAQ,IACRE,EAAS,IACTE,EAAY,GACX,EAIiCU,MAAO1B,EAAOC,KAAM0B,aAAa,MAA/D,WACK,mBAAOD,MAAO1B,EAAOG,MAArB,kBAEG,kBACIyB,KAAK,OACLjB,KAAK,OACLQ,MAAOR,EACPkB,SAAUZ,QAGlB,mBAAOS,MAAO1B,EAAOG,MAArB,mBAEI,kBACIyB,KAAK,QACLjB,KAAK,QACLQ,MAAON,EACPgB,SAAUZ,QAGjB,mBAAOS,MAAO1B,EAAOG,MAArB,sBAEG,kBACIyB,KAAK,WACLjB,KAAK,WACLQ,MAAOJ,EACPc,SAAUZ,QAGd,mBAAQW,KAAK,SAAb,2BAIf,CC/Ec,SAASE,IACtB,OACE,0BAEE,SAACvB,EAAD,KAGL,C","sources":["views/RegisterView.js","pages/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n//import register from \"redux/auth/auth-operations\";\nimport authOperations from \"../redux/auth/auth-operations\";\nconst styles = {\n    form: {\n        width: 320,\n    },\n    label: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: 15,\n    },\n};\nexport default function RegisterView() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n        case 'name':\n            return setName(value);\n        case 'email':\n            return setEmail(value);\n        case 'password':\n            return setPassword(value);\n        default:\n            return;\n    }\n};\n\nconst handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    dispatch(\n       authOperations.register({\n            name: form.elements.name.value,\n            email: form.elements.email.value,\n            password: form.elements.password.value,\n        }));\n    setName('');\n    setEmail('');\n    setPassword('');\n    };\n    return (\n         <div>\n        <h1>Register page</h1>\n        <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n             <label style={styles.label}>\n                name\n                <input\n                    type=\"name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label style={styles.label}>\n                email\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                />\n            </label>\n             <label style={styles.label}>\n                password\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                />\n                </label>\n                <button type=\"submit\">Register</button>\n        </form>\n    </div>\n    )\n}","import RegisterView from \"../views/RegisterView\";\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <h2>Registration</h2> */}\n      <RegisterView />\n    </div>\n  );\n}"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","evt","preventDefault","currentTarget","authOperations","elements","style","autoComplete","type","onChange","Register"],"sourceRoot":""}